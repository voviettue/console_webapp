variables:
  REGISTRY: 221168245729.dkr.ecr.eu-north-1.amazonaws.com
  IMAGE: gigapress/console-webapp
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  TAG_VERSION_REGEX: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/

stages:
  - delivery

.push_image_template:
  image: docker:20
  stage: delivery
  variables:
    AWS_PROFILE: catex
    AWS_REGION: eu-north-1
  services:
    - docker:20-dind
  before_script:
    - apk add --no-cache python3 py3-pip
    - pip install awscli
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REGISTRY
  cache: []

push-dev:
  extends: .push_image_template
  script:
    - docker build --no-cache -t $IMAGE:dev .
    - docker tag $IMAGE:dev $REGISTRY/$IMAGE:dev
    - docker push $REGISTRY/$IMAGE:dev
  only:
    - dev

push-prod:
  extends: .push_image_template
  script:
    - docker build --no-cache -t $IMAGE:$CI_COMMIT_TAG .
    - docker tag $IMAGE:$CI_COMMIT_TAG $REGISTRY/$IMAGE:$CI_COMMIT_TAG
    - docker push $REGISTRY/$IMAGE:$CI_COMMIT_TAG
  only:
    - tags
    - TAG_VERSION_REGEX
